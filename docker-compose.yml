version: '3.8'
services:

    # PHP Service
    php:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: ${APP_SLUG}_php
        restart: unless-stopped
        depends_on:
            - database
        ports:
            - "5173:5173"
        environment:
            SERVICE_NAME: ${APP_SLUG}_php
            SERVICE_TAGS: ${APP_ENV}
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app_network

    # Nginx Service
    nginx:
        image: nginx:1.25.2-alpine
        container_name: ${APP_SLUG}_nginx
        restart: unless-stopped
        ports:
            - "8088:80"
            - "8089:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - app_network

    # Mariadb Service
    database:
        image: mariadb:latest
        container_name: ${APP_SLUG}_database
        restart: unless-stopped
        ports:
            - "127.0.0.1:3306:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            SERVICE_TAGS: ${APP_ENV}
            SERVICE_NAME: ${APP_SLUG}_database
        volumes:
            - ./storage-db:/var/lib/mysql/
            - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app_network

    # Redis Service
    redis:
        image: redis:latest
        container_name: ${APP_SLUG}_redis
        restart: unless-stopped
        command: redis-server --requirepass ${REDIS_PASSWORD}
        env_file:
            - .env
        networks:
            - app_network

    # Mailhog Service
    mailhog:
        image: mailhog/mailhog:latest
        restart: unless-stopped
        container_name: ${APP_SLUG}_mailhog
        ports:
            - "8025:8025"
            - "1025:1025"
        networks:
            - app_network

    # Phpmyadmin Service
    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        container_name: ${APP_SLUG}_phpmyadmin
        restart: unless-stopped
        ports:
            - "8100:80"
        depends_on:
            - database
        environment:
            PMA_ARBITRARY: 1
            PMA_HOST: database
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
        networks:
            - app_network

    # Minio Service
    minio:
        image: 'minio/minio:latest'
        ports:
            - '9000:9000'
            - '8900:8900'
        environment:
            MINIO_ROOT_USER: ${MINIO_ROOT_USER}
            MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
        volumes:
            - ./minio-data:/data/minio
        command: 'minio server /data/minio --console-address ":8900"'
        networks:
            - app_network

    # Traefik
    traefik:
        image: traefik:latest
        container_name: ${APP_SLUG}_traefik
        restart: unless-stopped
        ports:
            - "80:80"
            - "8080:8080"
            - "8001:8001"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./traefik/logs:/logs
            - ./traefik/certs:/certs
            - ./docker/traefik/config:/etc/traefik
        networks:
            - app_network

# Docker Networks
networks:
    app_network:
        driver: bridge

